name: Run Laravel Tests

on:
  push:
    branches:
      - main-dev-env
  pull_request:
    branches:
      - main-dev-env

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.38
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out code
        uses: actions/checkout@v3  # v3にアップデート

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3.12'  # 使用するPHPのバージョン
          extensions: xdebug, pdo_mysql
          coverage: xdebug

      - name: Install dependencies
        run: |
          cp .env.example .env
          composer install --prefer-dist --no-progress --no-suggest
          php artisan key:generate

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get install -y netcat
          until nc -z -v -w30 127.0.0.1 3306
          do
            echo "Waiting for MySQL..."
            sleep 2
          done
          
      - name: Run migrations
        run: php artisan migrate --seed

      - name: Run tests with coverage
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel
          DB_USERNAME: user
          DB_PASSWORD: password
        run: php artisan test --coverage-text --coverage-html=storage/coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: storage/coverage

      - name: Create pull request for selected files
        if: ${{ success() }}  # テストがパスした場合のみ実行
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            # 特定のディレクトリだけを別ブランチにコピー
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
  
            # MVCファイルを含むブランチを作成
            git checkout -b update-mvc-files
            git add app/ resources/ routes/  # 必要なディレクトリのみ追加
            git commit -m "Update MVC files after passing tests"
  
            # 新ブランチをプッシュ
            git push origin update-mvc-files
  
            # GitHub CLI を使用して PR を作成
            gh pr create --base main --head update-mvc-files --title "Auto-update MVC files after tests" --body "Automated PR for MVC files from main-dev-env to main"
            
      - name: Merge pull request
        if: ${{ success() }}
        run: |
            # PRをマージ
            PR_NUMBER=$(gh pr list --state open --head update-mvc-files --json number --jq '.[0].number')
            gh pr merge $PR_NUMBER --squash --delete-branch